version: 2.1
# orbs:
#   ruby: circleci/ruby@0.1.2
references:
  ruby_envs: &ruby_envs
    environment:
      BUNDLE_PATH: vendor/bundle
      DATABASE_HOSTNAME: 127.0.0.1
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      BUNDLER_VERSION: 2.1.4
      RAILS_ENV: test
  mysql_envs: &mysql_envs
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
jobs:
  test_rspec:
    docker:
      - image: hatd/circle-ci:3.0
        <<: *ruby_envs
      - image: mysql:5.7.33
        <<: *mysql_envs
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      - restore_cache:
          keys:
            - v1-gem-cache-{{ checksum "Gemfile.lock" }}
            - v1-gem-cache-
      - run:
          name: Bundle Install
          command: bundle check || bundle install --jobs=4 --retry=3
      - save_cache:
          key: v1-gem-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          keys:
            - v1-asset-cache-{{ arch }}-{{ .Branch }}
            - v1-asset-cache-
      - run:
          name: Build assets
          command: bundle exec rails assets:precompile
      - save_cache:
          key: v1-asset-cache-{{ arch }}-{{ .Branch }}-{{ epoch }}
          paths:
            - public/assets
            - tmp/cache/assets/sprockets
      - run:
          name: Grant script permission
          command: chmod a+x wait-for-it.sh
      - run:
          name: Wait db
          command: ./wait-for-it.sh 127.0.0.1:3306 --timeout=300 -- echo 'Mysql service is ready!'
      - run:
          name: Database setup
          command: RAILS_ENV=test bundle exec rails db:drop db:create
      - run:
          name: Run Migrate
          command: RAILS_ENV=test bundle exec rails db:migrate
      - run:
          name: Rubocop test
          command: bundle exec rubocop
      - run:
          name: Rspec test
          command: |
            mkdir ~/rspec
            bundle exec rspec --format progress --format RspecJunitFormatter -o ~/rspec/rspec.xml
            mv coverage ~/rspec/coverage
          no_output_timeout: 20m
      # collect reports
      - store_test_results:
          path: ~/rspec

      - store_artifacts:
          path: ~/rspec
workflows:
  version: 2
  test:
    jobs:
    - test_rspec
